[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/graphics/decks/classic/2_corner_icons/deck_1.png" type="Texture" id=1]
[ext_resource path="res://assets/graphics/back.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


# Declare member variables here:
const CARD_SIZE = Vector2(72, 96)

var value
var suit
var id
var color
var old_pos
var is_open = false
var is_picked = false
var is_on_top = false

onready var front = $Front
onready var back = $Back
onready var tween = $Tween

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	follow_mouse()


func _on_Card_input_event(_viewport, event, _shape_idx):
	if !G.is_card_flipped && !G.is_card_sliding:
		if event is InputEventMouseButton && event.button_index == BUTTON_LEFT:
			if event.pressed:
				if is_open:
						if !is_picked:
							old_pos = position
						
						is_picked = true
				else:
					if G.storage_stack.has(self):
						if is_on_top:
							G.is_card_flipped = true
							G.flip_id = id
					#else:
						#if is_on_top:
			else:
				if G.flip_id == id:
					G.flip_id = null
					print(G.storage_stack.size())
					change_parent(get_tree().get_nodes_in_group(\"table\")[0].flip_open)
					show_front()
					
					G.flip_open_stack.append(self)
					
					if G.flip_open_stack.size() > 1:
						G.flip_open_stack[G.flip_open_stack.size() - 2].is_on_top = false
					
					G.storage_stack.erase(self)
					
					if G.storage_stack.size()>0:
						G.storage_stack[G.storage_stack.size() - 1].is_on_top = true
				else:
					is_picked = false
					if !old_pos == null:
						slide_to(old_pos)


func set_card_type():
	var region_pos = id * CARD_SIZE
	front.region_rect = Rect2(region_pos, CARD_SIZE)


func show_front():
	is_open = true
	back.visible = !is_open


func show_back():
	is_open = false
	back.visible = !is_open


func change_parent(parent):
	get_parent().remove_child(self)
	parent.add_child(self)


func follow_mouse():
	if is_picked:
		var mouse_position = get_viewport().get_mouse_position()
		position = -(get_parent().position + get_parent().get_parent().position) + mouse_position + Vector2(0, 40)


func slide_to(target_pos):
	G.is_card_sliding = true
	tween.interpolate_property(self, \"position\",
	position, target_pos, 0.1,
	Tween.TRANS_LINEAR, Tween.EASE_IN_OUT)
	tween.start()
	yield(tween,\"tween_completed\")
	G.is_card_sliding = false
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 36, 48 )

[node name="Card" type="Area2D"]
monitoring = false
monitorable = false
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Front" type="Sprite" parent="."]
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 0, 0, 72, 96 )

[node name="Back" type="Sprite" parent="."]
texture = ExtResource( 2 )

[node name="Tween" type="Tween" parent="."]

[connection signal="input_event" from="." to="." method="_on_Card_input_event"]
