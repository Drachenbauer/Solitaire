[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/style/Style.tres" type="Theme" id=1]
[ext_resource path="res://assets/graphics/suits 1.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


# Declare member variables here:
const SUITS = {\"h\" : 0, \"d\" : 2, \"s\" : 4, \"c\" : 6}
const VALUES = [\"a\", 2, 3, 4, 5, 6, 7, 8, 9, 10, \"j\", \"q\", \"k\"]

var storage_stack = []
var flip_open_stack = []
var target_stacks = {\"h\" : [], \"d\" : [], \"s\" : [], \"c\" : []}
var bottom_stacks = [[], [], [], [], [], [], []]
var storage_pos = Vector2(52, 64)
var is_card_flipped = false
var is_card_sliding = false

onready var card_path = preload(\"Card.tscn\")
onready var deck = $Deck

# Called when the node enters the scene tree for the first time.
func _ready():
	generate_deck()
	deal_bottom_stacks()


func generate_deck():
	for suit in SUITS:
		for value in VALUES:
			var value_id = VALUES.find(value)
			var coord_base
			
			if value_id < 10:
				coord_base = Vector2(value_id, 0)
			else:
				coord_base = Vector2(value_id - 10, 1)
			
			var id = coord_base + Vector2(0, SUITS[suit])
			var card = card_path.instance()
			card.suit = SUITS[suit]
			card.value = value
			card.id = id
			deck.add_child(card)
			card.set_card_type()
			storage_stack.append(card)
			card.connect(\"flipped\", self, \"_is_card_flipped\") 
	
	shuffle_deck()
	sort_card_layers_as_array()


func shuffle_deck():
	randomize()
	storage_stack.shuffle()


func deal_bottom_stacks():
	var i = 0
	
	for stack in bottom_stacks:
		i += 1
		
		for j in range(i):
			var card = storage_stack[storage_stack.size()-1]
			card.to_front()
			card.position = Vector2(52 + ((i - 1) * 104), 192 + (stack.size() * 8))
			
			if j == i - 1:
				card.show_front()
			
			stack.append(card)
			storage_stack.erase(card)


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	cards_back_to_storage()
	is_card_flipped = false


func _is_card_flipped():
	is_card_flipped = true


func cards_back_to_storage():
	if !is_card_flipped && !is_card_sliding:
		var click_position = get_viewport().get_mouse_position()
		
		if click_position.x > 16 && click_position.x < 89:
			if click_position.y > 16 && click_position.y < 113:
				if Input.is_action_just_pressed(\"Click\"):
					storage_stack = flip_open_stack.duplicate()
					flip_open_stack.clear()
					storage_stack.invert()
					sort_card_layers_as_array()

func sort_card_layers_as_array():
	for card in storage_stack:
		card.position = storage_pos
		card.to_front()
		card.show_back()
"

[node name="Game" type="Node2D"]
script = SubResource( 1 )

[node name="Panel" type="Panel" parent="."]
margin_right = 728.0
margin_bottom = 520.0
mouse_filter = 2
theme = ExtResource( 1 )

[node name="Panel" type="Panel" parent="Panel"]
margin_left = 16.0
margin_top = 16.0
margin_right = 88.0
margin_bottom = 112.0
mouse_filter = 2

[node name="Panel2" type="Panel" parent="Panel"]
margin_left = 120.0
margin_top = 16.0
margin_right = 192.0
margin_bottom = 112.0
mouse_filter = 2

[node name="Panel3" type="Panel" parent="Panel"]
margin_left = 328.0
margin_top = 16.0
margin_right = 400.0
margin_bottom = 112.0
mouse_filter = 2

[node name="Panel4" type="Panel" parent="Panel"]
margin_left = 432.0
margin_top = 16.0
margin_right = 504.0
margin_bottom = 112.0
mouse_filter = 2

[node name="Panel5" type="Panel" parent="Panel"]
margin_left = 536.0
margin_top = 16.0
margin_right = 608.0
margin_bottom = 112.0
mouse_filter = 2

[node name="Panel6" type="Panel" parent="Panel"]
margin_left = 640.0
margin_top = 16.0
margin_right = 712.0
margin_bottom = 112.0
mouse_filter = 2

[node name="Hearts" type="Sprite" parent="Panel"]
position = Vector2( 364, 64 )
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 0, 0, 16, 16 )

[node name="Diamonds" type="Sprite" parent="Panel"]
position = Vector2( 468, 64 )
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 16, 0, 16, 16 )

[node name="Spades" type="Sprite" parent="Panel"]
position = Vector2( 572, 64 )
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 0, 16, 16, 16 )

[node name="Clubs" type="Sprite" parent="Panel"]
position = Vector2( 676, 64 )
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 16, 16, 16, 16 )

[node name="Deck" type="Node2D" parent="."]
