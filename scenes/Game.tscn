[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/style/Style.tres" type="Theme" id=1]
[ext_resource path="res://assets/graphics/suits 1.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


# Declare member variables here:
onready var card_path = preload(\"Card.tscn\")
onready var deck = $Deck
onready var storage = $Deck/Storage
onready var flip_open = $Deck/FlipOpen
onready var targets = {\"h\" : $Deck/TargetHearts, \"d\" : $Deck/TargetDiamonds, \"s\" : $Deck/TargetSpades, \"c\" : $Deck/TargetClubs}
onready var bottoms = [$Deck/Bottom1, $Deck/Bottom2, $Deck/Bottom3, $Deck/Bottom4, $Deck/Bottom5, $Deck/Bottom6, $Deck/Bottom7]
onready var target_buttons = {$StackButtons/TargetHeartsButton : G.target_stacks[\"h\"],
								$StackButtons/TargetDiamondsButton : G.target_stacks[\"d\"],
								$StackButtons/TargetSpadesButton : G.target_stacks[\"s\"],
								$StackButtons/TargetClubsButton : G.target_stacks[\"c\"]}
onready var bottom_buttons ={$StackButtons/BottomButton1 : G.bottom_stacks[0],
							$StackButtons/BottomButton2 : G.bottom_stacks[1],
							$StackButtons/BottomButton3 : G.bottom_stacks[2],
							$StackButtons/BottomButton4 : G.bottom_stacks[3],
							$StackButtons/BottomButton5 : G.bottom_stacks[4],
							$StackButtons/BottomButton6 : G.bottom_stacks[5],
							$StackButtons/BottomButton7 : G.bottom_stacks[6],}

# Called when the node enters the scene tree for the first time.
func _ready():
	connect_button_signals()
	generate_deck()
	shuffle_deck()
	put_deck_on_storage()
	deal_bottom_stacks()


func connect_button_signals():
	for button in get_tree().get_nodes_in_group(\"target_buttons\"):
		button.connect(\"button_down\", self, \"_on_TargetButton_button_down\",[button])
	
	for button in get_tree().get_nodes_in_group(\"bottom_buttons\"):
		button.connect(\"button_down\", self, \"_on_BottomButton_button_down\",[button])
		button.connect(\"pressed\", self, \"_on_BottomButton_button_pressed\",[button])



func generate_deck():
	for suit in G.SUITS:
		for value in G.VALUES:
			var value_id = G.VALUES.find(value)
			var coord_base
			
			if value_id < 10:
				coord_base = Vector2(value_id, 0)
			else:
				coord_base = Vector2(value_id - 10, 1)
			
			var id = coord_base + Vector2(0, G.SUITS[suit])
			var card = card_path.instance()
			card.value = value
			card.suit = suit
			card.id = id
			
			if G.SUITS[suit] < 3:
				card.color = \"red\"
			else:
				card.color = \"black\"
			
			card.containing_stack = G.storage_stack
			 
			G.storage_stack.append(card)


func shuffle_deck():
	randomize()
	G.storage_stack.shuffle()


func put_deck_on_storage():
	for card in G.storage_stack:
		storage.add_child(card)
		card.set_card_type()


func deal_bottom_stacks():
	var i = 0
	
	for stack in G.bottom_stacks:
		i += 1
		var stack_id = G.bottom_stacks.find(stack)
		
		for j in range(i):
			var last_card
			var card = G.storage_stack[G.storage_stack.size()-1]
			
			if stack.size() == 0:
				card.change_parent(bottoms[stack_id])
			else:
				last_card = stack[j - 1]
				last_card.child = card
				card.change_parent(last_card)
			
			card.position.y = 8
			card.containing_stack = stack
			stack.append(card)
			G.storage_stack.erase(card)
			
			
			if j == i - 1:
				card.show_front()
				card.is_on_top = true


func _process(_delta):
	if Input.is_action_just_released(\"Click\"):
		if G.is_holding_card:
			for card in get_tree().get_nodes_in_group(\"cards\"):
				if card.is_picked:
					card.release_card()


func _on_StorageButton_pressed():
	if G.storage_stack.size() > 0:
		G.storage_stack[G.storage_stack.size() - 1].storage_flip_open()
	else:
		cards_back_to_storage()


func _on_FlipOpenButton_button_down():
	if G.flip_open_stack.size() > 0:
		G.flip_open_stack[G.flip_open_stack.size() - 1].hold_card()


func _on_TargetButton_button_down(button):
	var stack = target_buttons[button]
	if stack.size() > 0:
		stack[stack.size() - 1].hold_card()


func _on_BottomButton_button_down(button):
	var stack = bottom_buttons[button]
	if stack.size() > 0:
		if stack[stack.size() - 1].is_open:
			stack[stack.size() - 1].hold_card()


func _on_BottomButton_button_pressed(button):
	var stack = bottom_buttons[button]
	if stack.size() > 0:
		if !stack[stack.size() - 1].is_open:
			stack[stack.size() - 1].show_front()


func cards_back_to_storage():
	if !G.is_card_sliding:
		G.storage_stack = G.flip_open_stack.duplicate()
		G.flip_open_stack.clear()
		G.storage_stack.invert()
		
		for card in G.storage_stack:
			card.change_parent(storage)
			card.show_back()
			card.containing_stack = G.storage_stack
"

[node name="Game" type="Node2D" groups=["table"]]
script = SubResource( 1 )

[node name="Background" type="Panel" parent="."]
margin_right = 728.0
margin_bottom = 512.0
mouse_filter = 2
theme = ExtResource( 1 )

[node name="Panel" type="Panel" parent="Background"]
margin_left = 14.0
margin_top = 14.0
margin_right = 90.0
margin_bottom = 114.0
rect_rotation = 180.0
rect_pivot_offset = Vector2( 38, 50 )
mouse_filter = 2

[node name="Panel2" type="Panel" parent="Background"]
margin_left = 118.0
margin_top = 14.0
margin_right = 194.0
margin_bottom = 114.0
rect_rotation = 180.0
rect_pivot_offset = Vector2( 38, 50 )
mouse_filter = 2

[node name="Panel3" type="Panel" parent="Background"]
margin_left = 326.0
margin_top = 14.0
margin_right = 402.0
margin_bottom = 114.0
rect_rotation = 180.0
rect_pivot_offset = Vector2( 38, 50 )
mouse_filter = 2

[node name="Hearts" type="Sprite" parent="Background/Panel3"]
position = Vector2( 38, 50 )
rotation = 3.14159
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 0, 0, 16, 16 )

[node name="Panel4" type="Panel" parent="Background"]
margin_left = 430.0
margin_top = 14.0
margin_right = 506.0
margin_bottom = 114.0
rect_rotation = 180.0
rect_pivot_offset = Vector2( 38, 50 )
mouse_filter = 2

[node name="Diamonds" type="Sprite" parent="Background/Panel4"]
position = Vector2( 38, 50 )
rotation = 3.14159
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 16, 0, 16, 16 )

[node name="Panel5" type="Panel" parent="Background"]
margin_left = 534.0
margin_top = 14.0
margin_right = 610.0
margin_bottom = 114.0
rect_rotation = 180.0
rect_pivot_offset = Vector2( 38, 50 )
mouse_filter = 2

[node name="Spades" type="Sprite" parent="Background/Panel5"]
position = Vector2( 38, 50 )
rotation = 3.14159
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 0, 16, 16, 16 )

[node name="Panel6" type="Panel" parent="Background"]
margin_left = 638.0
margin_top = 14.0
margin_right = 714.0
margin_bottom = 114.0
rect_rotation = 180.0
rect_pivot_offset = Vector2( 38, 50 )
mouse_filter = 2

[node name="Clubs" type="Sprite" parent="Background/Panel6"]
position = Vector2( 38, 50 )
rotation = 3.14159
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 16, 16, 16, 16 )

[node name="Deck" type="Node2D" parent="."]
position = Vector2( 52, 64 )

[node name="Storage" type="Node2D" parent="Deck"]

[node name="FlipOpen" type="Node2D" parent="Deck"]
position = Vector2( 104, 0 )
rotation = -0.00234827

[node name="TargetHearts" type="Node2D" parent="Deck"]
position = Vector2( 312, 0 )

[node name="TargetDiamonds" type="Node2D" parent="Deck"]
position = Vector2( 416, 0 )
rotation = 0.00124177

[node name="TargetSpades" type="Node2D" parent="Deck"]
position = Vector2( 520, 0 )

[node name="TargetClubs" type="Node2D" parent="Deck"]
position = Vector2( 624, 0 )

[node name="Bottom1" type="Node2D" parent="Deck"]
position = Vector2( 0, 128 )

[node name="Bottom2" type="Node2D" parent="Deck"]
position = Vector2( 104, 128 )

[node name="Bottom3" type="Node2D" parent="Deck"]
position = Vector2( 208, 128 )

[node name="Bottom4" type="Node2D" parent="Deck"]
position = Vector2( 312, 128 )

[node name="Bottom5" type="Node2D" parent="Deck"]
position = Vector2( 416, 128 )

[node name="Bottom6" type="Node2D" parent="Deck"]
position = Vector2( 520, 128 )

[node name="Bottom7" type="Node2D" parent="Deck"]
position = Vector2( 623, 128 )

[node name="StackButtons" type="Node2D" parent="."]

[node name="StorageButton" type="TextureButton" parent="StackButtons"]
margin_left = 16.0
margin_top = 16.0
margin_right = 88.0
margin_bottom = 112.0
mouse_default_cursor_shape = 2

[node name="FlipOpenButton" type="TextureButton" parent="StackButtons"]
margin_left = 120.0
margin_top = 16.0
margin_right = 192.0
margin_bottom = 112.0
mouse_default_cursor_shape = 2

[node name="TargetHeartsButton" type="TextureButton" parent="StackButtons" groups=["target_buttons"]]
margin_left = 328.0
margin_top = 16.0
margin_right = 400.0
margin_bottom = 112.0

[node name="TargetDiamondsButton" type="TextureButton" parent="StackButtons" groups=["target_buttons"]]
margin_left = 432.0
margin_top = 16.0
margin_right = 504.0
margin_bottom = 112.0

[node name="TargetSpadesButton" type="TextureButton" parent="StackButtons" groups=["target_buttons"]]
margin_left = 536.0
margin_top = 16.0
margin_right = 608.0
margin_bottom = 112.0

[node name="TargetClubsButton" type="TextureButton" parent="StackButtons" groups=["target_buttons"]]
margin_left = 640.0
margin_top = 16.0
margin_right = 712.0
margin_bottom = 112.0

[node name="BottomButton1" type="TextureButton" parent="StackButtons" groups=["bottom_buttons"]]
margin_left = 16.0
margin_top = 144.0
margin_right = 88.0
margin_bottom = 512.0

[node name="BottomButton2" type="TextureButton" parent="StackButtons" groups=["bottom_buttons"]]
margin_left = 120.0
margin_top = 144.0
margin_right = 192.0
margin_bottom = 512.0

[node name="BottomButton3" type="TextureButton" parent="StackButtons" groups=["bottom_buttons"]]
margin_left = 224.0
margin_top = 144.0
margin_right = 296.0
margin_bottom = 512.0

[node name="BottomButton4" type="TextureButton" parent="StackButtons" groups=["bottom_buttons"]]
margin_left = 328.0
margin_top = 144.0
margin_right = 400.0
margin_bottom = 512.0

[node name="BottomButton5" type="TextureButton" parent="StackButtons" groups=["bottom_buttons"]]
margin_left = 432.0
margin_top = 144.0
margin_right = 504.0
margin_bottom = 512.0

[node name="BottomButton6" type="TextureButton" parent="StackButtons" groups=["bottom_buttons"]]
margin_left = 536.0
margin_top = 144.0
margin_right = 608.0
margin_bottom = 512.0

[node name="BottomButton7" type="TextureButton" parent="StackButtons" groups=["bottom_buttons"]]
margin_left = 640.0
margin_top = 144.0
margin_right = 712.0
margin_bottom = 512.0

[connection signal="pressed" from="StackButtons/StorageButton" to="." method="_on_StorageButton_pressed"]
[connection signal="button_down" from="StackButtons/FlipOpenButton" to="." method="_on_FlipOpenButton_button_down"]
